services:
  metatree-keycloak-postgres:
    image: postgres:13-alpine
    container_name: metatree-keycloak-database
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - metatree-keycloak-postgres-data:/var/lib/postgresql/data
    networks:
      - metatree-keycloak-db-network
    restart: unless-stopped
    logging:
      driver: ${DOCKER_LOGGING_DRIVER:-journald}
      options:
        labels: application
        tag: metatree-keycloak-postgres

  metatree-keycloak-init:
    image: alpine:latest
    container_name: metatree-keycloak-init
    environment:
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:?Please configure KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:?Please configure KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:?Please configure KEYCLOAK_CLIENT_SECRET}
      METATREE_URL: ${METATREE_URL:?Please configure METATREE_URL.}
    volumes:
      - ./keycloak/realm-template.json:/tmp/realm-template.json
      - keycloak-import-data:/opt/keycloak/data/import
      - ./keycloak/init-realm.sh:/init-realm.sh
    command: sh /init-realm.sh
    networks:
      - metatree-keycloak-db-network

  metatree-keycloak:    
    image: ${KEYCLOAK_IMAGE}
    container_name: metatree-keycloak
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://metatree-keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME:?Please configure KEYCLOAK_HOSTNAME.}
      KC_HTTP_PORT: 8080
      KC_HTTPS_PORT: 8443
      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_STRICT: false
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_RELATIVE_PATH: /auth
    ports:
      - ${KEYCLOAK_PORT:-8080}:8080
    depends_on:
      - metatree-keycloak-postgres
      - metatree-keycloak-init
    networks:
      - metatree-keycloak-db-network
    volumes:
      - keycloak-import-data:/opt/keycloak/data/import
    restart: unless-stopped
    logging:
      driver: ${DOCKER_LOGGING_DRIVER:-journald}
      options:
        labels: application
        tag: metatree-keycloak

volumes:
  metatree-keycloak-postgres-data:
  keycloak-import-data:

networks:
  metatree-keycloak-db-network:
    driver: bridge
